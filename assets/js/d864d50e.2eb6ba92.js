"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[461],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var r=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,l=function(e,n){if(null==e)return{};var t,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var i=r.createContext({}),u=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(i.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},k=r.forwardRef((function(e,n){var t=e.components,l=e.mdxType,a=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(t),k=l,f=d["".concat(i,".").concat(k)]||d[k]||p[k]||a;return t?r.createElement(f,o(o({ref:n},c),{},{components:t})):r.createElement(f,o({ref:n},c))}));function f(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var a=t.length,o=new Array(a);o[0]=k;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s[d]="string"==typeof e?e:l,o[1]=s;for(var u=2;u<a;u++)o[u]=t[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}k.displayName="MDXCreateElement"},1247:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var r=t(7462),l=(t(7294),t(3905));const a={sidebar_position:2},o=void 0,s={unversionedId:"\u521d\u9636\u6570\u636e\u7ed3\u6784/\u94fe\u8868\u9762\u8bd5\u9898",id:"\u521d\u9636\u6570\u636e\u7ed3\u6784/\u94fe\u8868\u9762\u8bd5\u9898",title:"\u94fe\u8868\u9762\u8bd5\u9898",description:"leetcode\u9898\u76ee\uff0c\u5237\u9898",source:"@site/docs/\u521d\u9636\u6570\u636e\u7ed3\u6784/3.\u94fe\u8868\u9762\u8bd5\u9898.md",sourceDirName:"\u521d\u9636\u6570\u636e\u7ed3\u6784",slug:"/\u521d\u9636\u6570\u636e\u7ed3\u6784/\u94fe\u8868\u9762\u8bd5\u9898",permalink:"/docs/\u521d\u9636\u6570\u636e\u7ed3\u6784/\u94fe\u8868\u9762\u8bd5\u9898",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/\u521d\u9636\u6570\u636e\u7ed3\u6784/3.\u94fe\u8868\u9762\u8bd5\u9898.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"\u590d\u6742\u5ea6+\u987a\u5e8f\u8868",permalink:"/docs/\u521d\u9636\u6570\u636e\u7ed3\u6784/\u590d\u6742\u5ea6+\u987a\u5e8f\u8868"},next:{title:"\u94fe\u8868OJ",permalink:"/docs/\u521d\u9636\u6570\u636e\u7ed3\u6784/\u94fe\u8868OJ"}},i={},u=[{value:"leetcode\u9898\u76ee\uff0c\u5237\u9898",id:"leetcode\u9898\u76ee\u5237\u9898",level:2},{value:"\u79fb\u9664\u94fe\u8868\u5143\u7d20",id:"\u79fb\u9664\u94fe\u8868\u5143\u7d20",level:3},{value:"\u65b9\u6cd5\u4e00\uff1a",id:"\u65b9\u6cd5\u4e00",level:3},{value:"\u65b9\u6cd5\u4e8c\uff1a",id:"\u65b9\u6cd5\u4e8c",level:3},{value:"\u53cd\u8f6c\u5355\u94fe\u8868",id:"\u53cd\u8f6c\u5355\u94fe\u8868",level:2},{value:"\u65b9\u6cd5\u4e00\uff1a\u5934\u63d2",id:"\u65b9\u6cd5\u4e00\u5934\u63d2",level:3},{value:"\u65b9\u6cd5\u4e8c\uff1a\u6307\u9488\u98a0\u5012",id:"\u65b9\u6cd5\u4e8c\u6307\u9488\u98a0\u5012",level:3},{value:"\u94fe\u8868\u7684\u4e2d\u95f4\u7ed3\u70b9",id:"\u94fe\u8868\u7684\u4e2d\u95f4\u7ed3\u70b9",level:2},{value:"\u5feb\u6162\u6307\u9488",id:"\u5feb\u6162\u6307\u9488",level:3}],c={toc:u},d="wrapper";function p(e){let{components:n,...t}=e;return(0,l.kt)(d,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"leetcode\u9898\u76ee\u5237\u9898"},"leetcode\u9898\u76ee\uff0c\u5237\u9898"),(0,l.kt)("h3",{id:"\u79fb\u9664\u94fe\u8868\u5143\u7d20"},(0,l.kt)("a",{parentName:"h3",href:"https://leetcode.cn/problems/remove-linked-list-elements/"},"\u79fb\u9664\u94fe\u8868\u5143\u7d20")),(0,l.kt)("p",null,"\u7ed9\u4f60\u4e00\u4e2a\u94fe\u8868\u7684\u5934\u8282\u70b9 ",(0,l.kt)("inlineCode",{parentName:"p"},"head")," \u548c\u4e00\u4e2a\u6574\u6570 ",(0,l.kt)("inlineCode",{parentName:"p"},"val")," \uff0c\u8bf7\u4f60\u5220\u9664\u94fe\u8868\u4e2d\u6240\u6709\u6ee1\u8db3 ",(0,l.kt)("inlineCode",{parentName:"p"},"Node.val == val")," \u7684\u8282\u70b9\uff0c\u5e76\u8fd4\u56de ",(0,l.kt)("strong",{parentName:"p"},"\u65b0\u7684\u5934\u8282\u70b9")," \u3002"),(0,l.kt)("blockquote",null,(0,l.kt)("pre",null,(0,l.kt)("strong",null,"\u8f93\u5165\uff1a"),"head = [1,2,6,3,4,5,6], val = 6",(0,l.kt)("strong",null,"\u8f93\u51fa\uff1a"),"[1,2,3,4,5]"),(0,l.kt)("pre",null,(0,l.kt)("strong",null,"\u8f93\u5165\uff1a"),"head = [], val = 1",(0,l.kt)("strong",null,"\u8f93\u51fa\uff1a"),"[]"),(0,l.kt)("pre",null,(0,l.kt)("strong",null,"\u8f93\u5165\uff1a"),"head = [7,7,7,7], val = 7",(0,l.kt)("strong",null,"\u8f93\u51fa\uff1a"),"[]")),(0,l.kt)("h3",{id:"\u65b9\u6cd5\u4e00"},"\u65b9\u6cd5\u4e00\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"struct ListNode* removeElements(struct ListNode* head, int val){\n     //ssert(*head);\n     struct ListNode* prev = NULL;\n    struct ListNode* cur = head;\n\n    while(cur)\n    {\n       if(cur->val==val)\n       {\n           //\u5934\u5220\n           if(cur==head)\n           {\n               head=cur->next;\n               free(cur);\n               cur=head;\n           }\n           else\n           {\n               //\u666e\u901a\u5220\u9664\n            prev->next=cur->next;\n            free(cur);\n           cur=prev->next;\n           }\n       }\n       else\n       {\n           prev = cur;\n           cur=cur->next;\n       }\n\n    }\n    return head;\n}\n")),(0,l.kt)("h3",{id:"\u65b9\u6cd5\u4e8c"},"\u65b9\u6cd5\u4e8c\uff1a"),(0,l.kt)("p",null,"\u904d\u5386\u539f\u94fe\u8868\uff0c\u628a\u4e0d\u662fval\u7684\u8282\u70b9\u62ff\u51fa\u6765\u5c3e\u63d2\u5230\u65b0\u94fe\u8868"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     struct ListNode *next;\n * };\n */\n\n\nstruct ListNode* removeElements(struct ListNode* head, int val){\n\n//\u65b9\u6cd5\u4e8c\uff0c\u7ed9\u4e00\u4e2a\u65b0\u94fe\u8868\uff0c\u628a\u4e0d\u662fval\u7684\u8282\u70b9\u5c3e\u5dee\u5230\u65b0\u94fe\u8868\nstruct ListNode* cur=head;\nstruct ListNode* tail=NULL;\nhead=NULL;\nwhile(cur)\n{\n    if(cur->val==val)\n    {\n        struct ListNode* del = cur;\n        cur = cur ->next;\n        free(del);\n    }\n    else\n    {\n        //\u5c3e\u5dee\u5230\u65b0\u94fe\u8868\n        if(tail==NULL)\n        {\n            head=tail=cur;\n        }\n        else\n        {\n         tail->next=cur;\n         tail=tail->next;   \n        }\n        cur=cur->next;\n    }\n}\nif(tail)\n    tail->next=NULL;\nreturn head;\n}\n\n")),(0,l.kt)("h2",{id:"\u53cd\u8f6c\u5355\u94fe\u8868"},(0,l.kt)("a",{parentName:"h2",href:"https://leetcode.cn/problems/reverse-linked-list/description/"},"\u53cd\u8f6c\u5355\u94fe\u8868")),(0,l.kt)("p",null,"\u7ed9\u4f60\u5355\u94fe\u8868\u7684\u5934\u8282\u70b9 ",(0,l.kt)("inlineCode",{parentName:"p"},"head")," \uff0c\u8bf7\u4f60\u53cd\u8f6c\u94fe\u8868\uff0c\u5e76\u8fd4\u56de\u53cd\u8f6c\u540e\u7684\u94fe\u8868\u3002"),(0,l.kt)("blockquote",null,(0,l.kt)("pre",null,(0,l.kt)("strong",null,"\u8f93\u5165\uff1a"),"head = [1,2,3,4,5]",(0,l.kt)("strong",null,"\u8f93\u51fa\uff1a"),"[5,4,3,2,1]"),(0,l.kt)("pre",null,(0,l.kt)("strong",null,"\u8f93\u5165\uff1a"),"head = [1,2]",(0,l.kt)("strong",null,"\u8f93\u51fa\uff1a"),"[2,1]")),(0,l.kt)("h3",{id:"\u65b9\u6cd5\u4e00\u5934\u63d2"},"\u65b9\u6cd5\u4e00\uff1a\u5934\u63d2"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"struct ListNode* reverseList(struct ListNode* head){\n\nstruct ListNode* cur = head;\nstruct ListNode*  newnode = NULL; \nstruct ListNode* next;\nwhile(cur)\n{\n    next = cur->next;\n   cur->next = newnode;\n   newnode = cur;\n   cur = next;\n  \n}\nreturn newnode;\n\n}\n")),(0,l.kt)("h3",{id:"\u65b9\u6cd5\u4e8c\u6307\u9488\u98a0\u5012"},"\u65b9\u6cd5\u4e8c\uff1a\u6307\u9488\u98a0\u5012"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"struct ListNode* reverseList(struct ListNode* head){\n\n   if(head==NULL)\n        return NULL;\n    struct ListNode *n1 , *n2, *n3;\n    n1 = NULL;\n   \n    n2 = head;\n    n3=n2->next;\n    while(n2)\n    {\n   \n        n2->next = n1;\n        n1 = n2;\n        n2 = n3;\n        if(n3)\n            n3 = n3->next; \n    }\n    return n1;\n\n}\n")),(0,l.kt)("h2",{id:"\u94fe\u8868\u7684\u4e2d\u95f4\u7ed3\u70b9"},(0,l.kt)("a",{parentName:"h2",href:"https://leetcode.cn/problems/middle-of-the-linked-list/description/"},"\u94fe\u8868\u7684\u4e2d\u95f4\u7ed3\u70b9")),(0,l.kt)("p",null,"\u7ed9\u4f60\u5355\u94fe\u8868\u7684\u5934\u7ed3\u70b9 ",(0,l.kt)("inlineCode",{parentName:"p"},"head")," \uff0c\u8bf7\u4f60\u627e\u51fa\u5e76\u8fd4\u56de\u94fe\u8868\u7684\u4e2d\u95f4\u7ed3\u70b9\u3002"),(0,l.kt)("p",null,"\u5982\u679c\u6709\u4e24\u4e2a\u4e2d\u95f4\u7ed3\u70b9\uff0c\u5219\u8fd4\u56de\u7b2c\u4e8c\u4e2a\u4e2d\u95f4\u7ed3\u70b9\u3002"),(0,l.kt)("blockquote",null,(0,l.kt)("pre",null,(0,l.kt)("strong",null,"\u8f93\u5165\uff1a"),"head = [1,2,3,4,5]",(0,l.kt)("strong",null,"\u8f93\u51fa\uff1a"),"[3,4,5]",(0,l.kt)("strong",null,"\u89e3\u91ca\uff1a"),"\u94fe\u8868\u53ea\u6709\u4e00\u4e2a\u4e2d\u95f4\u7ed3\u70b9\uff0c\u503c\u4e3a 3 \u3002"),(0,l.kt)("pre",null,(0,l.kt)("strong",null,"\u8f93\u5165\uff1a"),"head = [1,2,3,4,5,6]",(0,l.kt)("strong",null,"\u8f93\u51fa\uff1a"),"[4,5,6]",(0,l.kt)("strong",null,"\u89e3\u91ca\uff1a"),"\u8be5\u94fe\u8868\u6709\u4e24\u4e2a\u4e2d\u95f4\u7ed3\u70b9\uff0c\u503c\u5206\u522b\u4e3a 3 \u548c 4 \uff0c\u8fd4\u56de\u7b2c\u4e8c\u4e2a\u7ed3\u70b9\u3002")),(0,l.kt)("h3",{id:"\u5feb\u6162\u6307\u9488"},"\u5feb\u6162\u6307\u9488"),(0,l.kt)("p",null,"slow \u6307\u9488\u548c fast \u90fd\u5728\u8d77\u8dd1\u7ebf\uff0cfast\u7684\u901f\u5ea6\u662fslow\u7684\u4e24\u500d\uff0c\u6b64\u65f6fast\u8dd1\u5230\u7ec8\u70b9\u65f6\uff0cslow\u5c31\u5728\u8d5b\u7a0b\u7684\u4e2d\u95f4\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"//\u5feb\u6162\u6307\u9488\nstruct ListNode* middleNode(struct ListNode* head){\n    struct ListNode* slow,*fast;\n    slow = fast = head;\n    while(fast!=NULL&&fast->next!=NULL)\n    {\n        slow = slow->next;\n        fast = fast->next->next;\n    }\n    return slow;\n}\n")))}p.isMDXComponent=!0}}]);